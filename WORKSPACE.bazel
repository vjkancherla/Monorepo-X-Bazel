workspace(name = "monorepo_x_with_bazel")

load("@bazel_tools//tools/build_defs/repo:http.bzl", "http_archive")

#==== INSTALL PYTHON RULES START =======

# Update the SHA and VERSION to the lastest version available here:
# https://github.com/bazelbuild/rules_python/releases.

SHA="84aec9e21cc56fbc7f1335035a71c850d1b9b5cc6ff497306f84cced9a769841"

VERSION="0.23.1"

http_archive(
    name = "rules_python",
    sha256 = SHA,
    strip_prefix = "rules_python-{}".format(VERSION),
    url = "https://github.com/bazelbuild/rules_python/releases/download/{}/rules_python-{}.tar.gz".format(VERSION,VERSION),
)

load("@rules_python//python:repositories.bzl", "py_repositories")

py_repositories()

#==== INSTALL PYTHON RULES END =======


#==== CONFIGURE SPECIFIC PYTHON VERSION TO USE. START =======

# register a hermetic Python toolchain rather than rely on a system-installed interpreter for runtime execution

load("@rules_python//python:repositories.bzl", "python_register_toolchains")

python_register_toolchains(
    name = "python_3_9",
    # Available versions are listed in @rules_python//python:versions.bzl.
    # We recommend using the same version your team is already standardized on.
    python_version = "3.9.10",
)

load("@python_3_9//:defs.bzl", "interpreter")

load("@rules_python//python:pip.bzl", "pip_parse")

pip_parse(python_interpreter_target = interpreter)

#==== CONFIGURE SPECIFIC PYTHON VERSION TO USE. END =======


#==== INSTALL PYTHON 3rd PARTY DEPENDENCIES. START ==========
 
load("@rules_python//python:pip.bzl", "pip_install")

pip_install(
    name = "pip",
    requirements = "//bazel/python/thirdparty:requirements.txt",
)

load("@pip//:requirements.bzl", "install_deps")

# Initialize repositories for all packages in requirements.txt.
install_deps()

#==== INSTALL PYTHON 3rd PARTY DEPENDENCIES. END ==========


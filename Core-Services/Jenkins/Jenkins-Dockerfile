#Custom Jenkins Image with Kubectl, Helm, Docker-client, Coverage and SonarScanner tools installed.
#This image will be used to run Jenkins on Docker.

FROM --platform=linux/amd64 jenkins/jenkins:lts

USER root

# Install prerequisites
RUN apt-get update && \
    apt-get upgrade -y && \
    apt-get install -y apt-transport-https ca-certificates curl gnupg2 software-properties-common sudo python3 python3-pip # Added sudo, python3 and python3-pip here

# Install coverage.py
RUN pip3 install requests coverage

# Install OpenJDK
RUN apt-get install -y openjdk-11-jdk

# Install Docker CLI binary
RUN curl -L -o docker.tgz https://download.docker.com/linux/static/stable/x86_64/docker-20.10.7.tgz && \
    tar xzvf docker.tgz --strip 1 -C /usr/bin docker/docker && \
    rm docker.tgz && \
    chmod +x /usr/bin/docker

# Grant the Jenkins user sudo permissions
RUN echo "jenkins ALL=NOPASSWD: ALL" >> /etc/sudoers

# Add Jenkins user to the Docker group
RUN groupadd -g 999 docker && usermod -aG docker jenkins

# Install kubectl
RUN curl -LO "https://dl.k8s.io/release/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl" && \
    chmod +x kubectl && \
    mv kubectl /usr/local/bin/

# Install Helm
RUN curl -fsSL -o helm.tar.gz https://get.helm.sh/helm-v3.7.1-linux-amd64.tar.gz && \
    tar -zxvf helm.tar.gz && \
    mv linux-amd64/helm /usr/local/bin/helm && \
    rm -rf linux-amd64 && \
    rm helm.tar.gz

# Install SonarScanner (ARM64 version)
RUN curl -L -o sonar-scanner-cli.zip https://binaries.sonarsource.com/Distribution/sonar-scanner-cli/sonar-scanner-cli-4.6.2.2472-linux.zip && \
    unzip sonar-scanner-cli.zip -d /opt/ && \
    mv /opt/sonar-scanner-4.6.2.2472-linux /opt/sonar-scanner && \
    rm sonar-scanner-cli.zip

# Set SonarScanner in PATH
ENV PATH="/opt/sonar-scanner/bin:${PATH}"

# Clean up
RUN apt-get clean && \
    rm -rf /var/lib/apt/lists/*

USER jenkins

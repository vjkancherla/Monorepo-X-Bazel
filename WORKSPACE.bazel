workspace(name = "monorepo_x_with_bazel")

load("@bazel_tools//tools/build_defs/repo:http.bzl", "http_archive")

#==== INSTALL PYTHON RULES START =======

# Update the SHA and VERSION to the lastest version available here:
# https://github.com/bazelbuild/rules_python/releases.

SHA = "84aec9e21cc56fbc7f1335035a71c850d1b9b5cc6ff497306f84cced9a769841"

VERSION = "0.23.1"

http_archive(
    name = "rules_python",
    sha256 = SHA,
    strip_prefix = "rules_python-{}".format(VERSION),
    url = "https://github.com/bazelbuild/rules_python/releases/download/{}/rules_python-{}.tar.gz".format(VERSION, VERSION),
)

load("@rules_python//python:repositories.bzl", "py_repositories")

py_repositories()

#==== INSTALL PYTHON RULES END =======

#==== CONFIGURE SPECIFIC PYTHON VERSION TO USE. START =======

# register a hermetic Python toolchain rather than rely on a system-installed interpreter for runtime execution

load("@rules_python//python:repositories.bzl", "python_register_toolchains")

python_register_toolchains(
    name = "python_3_9",
    # Available versions are listed in @rules_python//python:versions.bzl.
    # We recommend using the same version your team is already standardized on.
    python_version = "3.9.10",
)

load("@python_3_9//:defs.bzl", "interpreter")
load("@rules_python//python:pip.bzl", "pip_parse")

pip_parse(python_interpreter_target = interpreter)

#==== CONFIGURE SPECIFIC PYTHON VERSION TO USE. END =======

#==== INSTALL PYTHON 3rd PARTY DEPENDENCIES. START ==========

load("@rules_python//python:pip.bzl", "pip_install")

pip_install(
    name = "pip",
    requirements = "//bazel/python/thirdparty:requirements.txt",
)

load("@pip//:requirements.bzl", "install_deps")

# Initialize repositories for all packages in requirements.txt.
install_deps()

#==== INSTALL PYTHON 3rd PARTY DEPENDENCIES. END ==========

#==== INSTALL GO RULES + GAZELLE FOR AUTO BUILD FILE GENERATION START =======
load("@bazel_tools//tools/build_defs/repo:http.bzl", "http_archive")

http_archive(
    name = "io_bazel_rules_go",
    sha256 = "91585017debb61982f7054c9688857a2ad1fd823fc3f9cb05048b0025c47d023",
    urls = [
        "https://mirror.bazel.build/github.com/bazelbuild/rules_go/releases/download/v0.42.0/rules_go-v0.42.0.zip",
        "https://github.com/bazelbuild/rules_go/releases/download/v0.42.0/rules_go-v0.42.0.zip",
    ],
)

http_archive(
    name = "bazel_gazelle",
    sha256 = "d3fa66a39028e97d76f9e2db8f1b0c11c099e8e01bf363a923074784e451f809",
    urls = [
        "https://mirror.bazel.build/github.com/bazelbuild/bazel-gazelle/releases/download/v0.33.0/bazel-gazelle-v0.33.0.tar.gz",
        "https://github.com/bazelbuild/bazel-gazelle/releases/download/v0.33.0/bazel-gazelle-v0.33.0.tar.gz",
    ],
)

load("@io_bazel_rules_go//go:deps.bzl", "go_register_toolchains", "go_rules_dependencies")
load("@bazel_gazelle//:deps.bzl", "gazelle_dependencies")
load("//:deps.bzl", "go_dependencies")

# gazelle:repository_macro deps.bzl%go_dependencies
go_dependencies()

go_rules_dependencies()

go_register_toolchains(version = "1.20.7")

gazelle_dependencies(go_repository_default_config = "//:WORKSPACE.bazel")
#==== INSTALL GO RULES + GAZELLE FOR AUTO BUILD FILE GENERATION END =======


#==== LOAD ADDITONAL GO DEPENDENCY LIBS START ===============
#=== The below libs were not automatically added as part of Gazelle depenecy management 
http_archive(
    name = "go_googleapis",
    urls = ["https://github.com/googleapis/googleapis/archive/4d27ae79c480f0de8e88aae02c53ee7fb9fc03f5.tar.gz"],
    strip_prefix = "googleapis-4d27ae79c480f0de8e88aae02c53ee7fb9fc03f5",
)

http_archive(
    name = "com_google_googleapis",
    urls = ["https://github.com/googleapis/googleapis/archive/4d27ae79c480f0de8e88aae02c53ee7fb9fc03f5.tar.gz"],
    strip_prefix = "googleapis-4d27ae79c480f0de8e88aae02c53ee7fb9fc03f5",
)

load("@com_google_googleapis//:repository_rules.bzl", "switched_rules_by_language")

switched_rules_by_language(
    name = "com_google_googleapis_imports",
    cc = True,
    grpc = True,
)
#==== LOAD ADDITONAL GO DEPENDENCY LIBS END ===============
